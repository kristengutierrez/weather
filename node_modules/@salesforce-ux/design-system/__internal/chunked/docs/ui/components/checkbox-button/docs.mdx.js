var SLDS="object"==typeof SLDS?SLDS:{};SLDS["__internal/chunked/docs/ui/components/checkbox-button/docs.mdx.js"]=function(e){function t(t){for(var o,i,s=t[0],l=t[1],u=t[2],d=0,f=[];d<s.length;d++)i=s[d],r[i]&&f.push(r[i][0]),r[i]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(e[o]=l[o]);for(c&&c(t);f.length;)f.shift()();return a.push.apply(a,u||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],o=!0,s=1;s<n.length;s++){var l=n[s];0!==r[l]&&(o=!1)}o&&(a.splice(t--,1),e=i(i.s=n[0]))}return e}var o={},r={18:0},a=[];function i(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=o,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/assets/scripts/bundle/";var s=this.webpackJsonpSLDS___internal_chunked_docs=this.webpackJsonpSLDS___internal_chunked_docs||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var u=0;u<s.length;u++)t(s[u]);var c=l;return a.push([428,0]),n()}({0:function(e,t){e.exports=React},4:function(e,t){e.exports=JSBeautify},428:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getContents=t.getElement=void 0;var o=n(0),r=(u(o),n(3)),a=u(r),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(79)),s=u(n(5)),l=n(1);function u(e){return e&&e.__esModule?e:{default:e}}var c=r.factories.h2,d=r.factories.h3,f=r.factories.li,h=r.factories.p,p=r.factories.ul,b=t.getElement=function(){return(0,o.createElement)(a.default,{},(0,o.createElement)("div",{className:"doc lead"},"A styled checkable input that communicates if an option is being added to a group"),c({id:"About-Checkbox-Button"},"About Checkbox Button"),h({},"The ‘add button’ is similar to a checkbox in that it presents a user with a","binary choice for an item. However, the only action a user can take is to","add (or remove) an entity. When a user clicks the add button, the entity is","stored, similar to an ‘add to cart’ experience, until the user saves changes."),h({},"The add button is useful for increasing clarity. Since the button only adds","or removes entities, the user knows the action they will prompt upon click.","The add button also provides a clear visual affordance (in SLDS, we use the","‘+’ icon as an metaphor for ‘add’) and a large target to take this action."),h({},"Use the add button if the component you’re building:"),p({},f({},"Exists without other multi-select elements (i.e. checkboxes)"),f({},"Allows users to select multiple entities"),f({},"Semantically fits the add/remove model")),c({id:"Base"},"Base"),(0,o.createElement)(s.default,null,i.default),c({id:"States"},"States"),d({id:"Checked"},"Checked"),(0,o.createElement)(s.default,null,(0,l.getDisplayElementById)(i.states,"checkbox-add-button-checked")),d({id:"Disabled"},"Disabled"),(0,o.createElement)(s.default,null,(0,l.getDisplayElementById)(i.states,"checkbox-add-button-disabled")),d({id:"Checked-and-Disabled"},"Checked and Disabled"),(0,o.createElement)(s.default,null,(0,l.getDisplayElementById)(i.states,"checkbox-add-button-checked-and-disabled")))};t.getContents=function(){return(0,r.createTableOfContents)(b())}}});