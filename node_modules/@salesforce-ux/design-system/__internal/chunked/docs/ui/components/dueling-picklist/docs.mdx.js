var SLDS="object"==typeof SLDS?SLDS:{};SLDS["__internal/chunked/docs/ui/components/dueling-picklist/docs.mdx.js"]=function(e){function t(t){for(var i,s,o=t[0],d=t[1],r=t[2],u=0,m=[];u<o.length;u++)s=o[u],a[s]&&m.push(a[s][0]),a[s]=0;for(i in d)Object.prototype.hasOwnProperty.call(d,i)&&(e[i]=d[i]);for(c&&c(t);m.length;)m.shift()();return n.push.apply(n,r||[]),l()}function l(){for(var e,t=0;t<n.length;t++){for(var l=n[t],i=!0,o=1;o<l.length;o++){var d=l[o];0!==a[d]&&(i=!1)}i&&(n.splice(t--,1),e=s(s.s=l[0]))}return e}var i={},a={30:0},n=[];function s(t){if(i[t])return i[t].exports;var l=i[t]={i:t,l:!1,exports:{}};return e[t].call(l.exports,l,l.exports,s),l.l=!0,l.exports}s.m=e,s.c=i,s.d=function(e,t,l){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(s.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(l,i,function(t){return e[t]}.bind(null,i));return l},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/assets/scripts/bundle/";var o=this.webpackJsonpSLDS___internal_chunked_docs=this.webpackJsonpSLDS___internal_chunked_docs||[],d=o.push.bind(o);o.push=t,o=o.slice();for(var r=0;r<o.length;r++)t(o[r]);var c=d;return n.push([435,0]),l()}({0:function(e,t){e.exports=React},4:function(e,t){e.exports=JSBeautify},435:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getContents=t.getElement=void 0;var i=l(0),a=(u(i),l(3)),n=u(a),s=u(l(5)),o=u(l(10)),d=u(l(13)),r=u(l(8)),c=l(56);l(48);function u(e){return e&&e.__esModule?e:{default:e}}var m=a.factories.a,h=a.factories.code,p=a.factories.em,f=a.factories.h2,g=a.factories.h3,b=a.factories.h4,S=a.factories.li,v=a.factories.p,E=a.factories.ul,w=t.getElement=function(){return(0,i.createElement)(n.default,{},(0,i.createElement)("div",{className:"doc lead"},"A dueling-picklist is used to move options between two lists and is often referred to as a multi-select. Sometimes, the list options can then be re-ordered, depending on the use case."),f({id:"About-Dueling-Picklist"},"About Dueling-Picklist"),g({id:"Accessibility"},"Accessibility"),v({},"This component is essentially 2 ARIA listboxes side by side, so we follow the ",m({href:"https://www.w3.org/TR/wai-aria-practices/#Listbox"},"ARIA practices guide")," to help implement their interaction in an accessible way. Some additional details, supplementary to the ARIA guide include:"),b({id:"Markup"},"Markup"),E({},S({},h({},'aria-multiselectable="true"')," should be set on each listbox"),S({},h({},"aria-selected")," should be placed on each ",h({},'role="option"'),", and set to ",h({},"false")," by default"),S({},h({},"aria-labelledby")," is used to identify the list to the user and should point to the list label"),S({},h({},"aria-describedby")," is used to provide operation instructions for the Drag and Drop interaction"),S({},h({},"tabindex"),' should be set to "0" when an item is selected and "-1" otherwise')),b({id:"Focus-Management"},"Focus Management"),E({},S({},"Initially, nothing should be selected and the first item in each list should have ",h({},'tabindex="0"')),S({},"When an item is focused, it becomes selected"),S({},"When focus leaves the list, the last selected item remains selected and focusable. When focus returns to the list focus is placed on the last selected item."),S({},"When moving items:",E({},S({},"With the move button: the items are unselected and added to the target list. The focus should remain on the move button."),S({},"With a keyboard shortcut: focus remains on the item, but in the target list. Since the item is focused, it is also selected."),S({},"If there are already selected items in the target list, they stay selected and the new items are added below them.")))),b({id:"Keyboard-Interactions"},"Keyboard Interactions"),E({},S({},"Each list has a single focusable option inside. There is only ever one focusable option per list and it is expected that a user will use their arrow keys, and some modifier keys, to perform all actions."),S({},"Because we support drag and drop re-ordering within a list, we implement the second multi-select keyboard model.",E({},S({},h({},"up")," and ",h({},"down")," arrows move focus ",p({},"and")," selection, with ",h({},'aria-selected="true"'),". Any previously selected items are deselected."),S({},h({},"shift + up")," and ",h({},"shift + down")," move focus and creates addition selections"),S({},h({},"ctrl + down")," or ",h({},"ctrl + up")," moves focus but selection remains where it is"),S({},h({},"ctrl + space")," toggles selection on the focused option, in addition to previous selections"),S({},h({},"ctrl + a")," selects all options in the list"),S({},h({},"cmd/ctrl + right")," and ",h({},"cmd/ctrl + left")," Moves selected items between lists"),S({},h({},"space"),' toggles "Drag and Drop" mode. When in "Drag and Drop" mode:',E({},S({},h({},"up")," and ",h({},"down")," arrows move the selected items ",p({},"within")," the current list")))))),f({id:"Base"},"Base"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reorder"},(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot})),f({id:"Group-Label"},"Group Label"),v({},"A Dueling Picklist should have a group label, similar to using a ",h({},"fieldset")," and ",h({},"legend")," on grouped form controls. To achieve this, wrap the Dueling Picklist in an ",h({},"slds-form-element")," and add a ",h({},"div")," with the same class names that are applied to a ",h({},"legend")," element in a fieldset, ",h({},"slds-form-element__label slds-form-element__legend"),"."),v({},(0,i.createElement)(r.default,{header:"Labeling the group",type:"a11y"},"It is important that the ",h({},"slds-form-element")," ",h({},"<div>")," has the ",h({},'role="group"')," attribute applied, along with ",h({},"aria-labelledby"),", whose value is the ID of the visible group label.")),(0,i.createElement)(d.default,{title:"Dueling Picklist With Group Label"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot}))),f({id:"Responsive"},"Responsive"),v({},"To make the dueling picklist responsive or use it within narrow regions, apply the class ",h({},"slds-dueling-picklist__column_responsive")," to the ",h({},"<div>"),"s with class ",h({},"slds-dueling-picklist__column")," that contain options (not the columns that only contain buttons). Any items longer than the space available will truncate with ellipses."),(0,i.createElement)(d.default,{title:"Dueling Picklist Responsive"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.CountriesSnapshot,noReorder:!0,isResponsive:!0}))),v({},(0,i.createElement)(r.default,{header:"Adjusting Height",type:"note"},"To adjust the height of the listboxes, set the height using an inline style on ",p({},"both")," of the ",h({},"<div>"),"s with class ",h({},"slds-dueling-picklist__column"),". If you are setting it based on a maximum number of items being shown before scrolling, you can set ",h({},"height = (2.25rem * numItems) + 1rem"),".")),v({},(0,i.createElement)(o.default,{toggleCode:!1},(0,i.createElement)("div",{className:"slds-dueling-list"},(0,i.createElement)("div",{className:"slds-dueling-list__column"},(0,i.createElement)("span",{className:"slds-form-element__label",id:"label-1"},"Available Languages"),(0,i.createElement)("div",{className:"slds-dueling-list__options",style:{height:"10rem"}},"{...}")),(0,i.createElement)("div",{className:"slds-dueling-list__column"},"{...}"),(0,i.createElement)("div",{className:"slds-dueling-list__column"},(0,i.createElement)("span",{className:"slds-form-element__label",id:"label-2"},"Selected Languages"),(0,i.createElement)("div",{className:"slds-dueling-list__options",style:{height:"10rem"}},"{...}"))))),f({id:"Edit-Mode"},"Edit Mode"),v({},"If the user needs to select multiple options for a field, like a list of languages supported, then use a dueling picklist without the re-order arrows on the right."),v({},(0,i.createElement)(r.default,{header:"Helpful Assistive Text",type:"a11y"},"The assistive text content in the ",h({},"option-drag-label")," ",h({},"<div>")," should provide clear instructions on how to drag and drop with a keyboard.")),(0,i.createElement)(d.default,{title:"Dueling Picklist"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.CountriesSnapshot,noReorder:!0}))),g({id:"Selected-Item"},"Selected Item"),(0,i.createElement)(r.default,{header:"Aria Selected",type:"a11y"},(0,i.createElement)("code",{className:"doc"},"aria-selected")," should be placed on each ",(0,i.createElement)("code",{className:"doc"},'role="option"'),", and set to ",(0,i.createElement)("code",{className:"doc"},"true")," when the item is selected."),(0,i.createElement)(d.default,{title:"Dueling Picklist with Item Selected"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.SelectedCountriesSnapshot,noReorder:!0}))),g({id:"Multiple-Selected-Items"},"Multiple Selected Items"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Multiple Items Selected"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.MultipleSelectedCountriesSnapshot,noReorder:!0}))),g({id:"Dropped-Items"},"Dropped Items"),v({},(0,i.createElement)(r.default,{type:"a11y",header:"Aria Live"},"The ",h({},"drag-live-region")," ",h({},"<div>")," with ",h({},'aria-live="assertive"')," should update as items are moved to provide context about the state and location of the items.")),(0,i.createElement)(o.default,{toggleCode:!1},(0,i.createElement)("div",{className:"slds-dueling-list"},(0,i.createElement)("div",{className:"slds-assistive-text",id:"drag-live-region","aria-live":"assertive"},"Arabic and German: Moved to Selected Languages."))),(0,i.createElement)(d.default,{title:"Dueling Picklist with Items Dropped"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DroppedCountriesSnapshot,noReorder:!0}))),g({id:"Locked-Items"},"Locked Items"),v({},"If items are not able to be removed from the selected list, a lock icon appears next to the item name."),(0,i.createElement)(d.default,{title:"Dueling Picklist with a Locked Item"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.LockedSnapShot,noReorder:!0}))),g({id:"With-Reordering"},"With Reordering"),v({},"If the order of the selected options matters, include the vertical arrows to the right. This allows the user to reorder the second listbox of options."),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reoder Active"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot}))),v({},"The following examples show the process of selecting an item, moving it within a list, and dropping it in a final position."),v({},(0,i.createElement)(r.default,{type:"a11y",header:"Aria Live"},"Pay attention to the ",h({},"drag-live-region")," ",h({},"<div>")," with ",h({},'aria-live="assertive"'),". This should update as items are moved to provide context about the state and location of the items at all times.")),b({id:"Item-Selected"},"Item Selected"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reoder Active Item Selected"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.SelectedSnapShot}))),b({id:"Item-Grabbed"},"Item Grabbed"),v({},"Within a list, users are able to drag and drop an item."),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reoder Active Item Grabbed"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.GrabbedSnapShot}))),b({id:"Item-Moved-Within-a-List"},"Item Moved Within a List"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reoder Active Item Moved within List"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.MovedInSnapShot}))),b({id:"Item-Dropped-in-a-List"},"Item Dropped in a List"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Reoder Active Item Dropped"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DroppedSnapShot}))),g({id:"Disabled"},"Disabled"),v({},"If the user is not able to interact with the dueling picklist, then it should be marked as disabled."),(0,i.createElement)(r.default,{type:"a11y",header:"Aria Disabled"},"In disabled mode, both list boxes ",(0,i.createElement)("code",{className:"doc"},"ul[role=listbox]")," should receive ",(0,i.createElement)("code",{className:"doc"},'aria-disabled="true"'),", and all directional buttons should receive the ",(0,i.createElement)("code",{className:"doc"},"disabled")," attribute."),(0,i.createElement)(r.default,{type:"note",header:"Utility Class"},"The class ",(0,i.createElement)("code",{className:"doc"},"slds-is-disabled")," should also be applied to the divs with the class ",(0,i.createElement)("code",{className:"doc"},"slds-dueling-list_options"),"."),(0,i.createElement)(d.default,{title:"Dueling Picklist Disabled"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DisabledSnapShot,disabled:!0}))),g({id:"Required"},"Required"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Required Indicator"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot,isRequired:!0}))),g({id:"With-Tooltip"},"With Tooltip"),v({},"If some contextual information regarding the dueling picklist is needed, add a tooltip next to the group label."),(0,i.createElement)(d.default,{title:"Dueling Picklist with Tooltip"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.Demo,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot,hasTooltip:!0,showTooltip:!0})))),g({id:"Required-With-Tooltip"},"Required With Tooltip"),(0,i.createElement)(d.default,{title:"Dueling Picklist with Required Indicator and Tooltip"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.Demo,null,(0,i.createElement)(c.MultiSelect,{dataSet:c.DefaultSnapShot,isRequired:!0,hasTooltip:!0,showTooltip:!0})))),f({id:"View-Mode"},"View Mode"),v({},"When the user is done selecting options, or is in view mode of the field, they are presented with a comma separated list."),(0,i.createElement)(d.default,{title:"Dueling Picklist in View Mode"},(0,i.createElement)(s.default,null,(0,i.createElement)(c.MultiSelectViewMode,null))))};t.getContents=function(){return(0,a.createTableOfContents)(w())}}});